{"ast":null,"code":"class WebSocketService {\n  constructor() {\n    this.ws = null;\n    this.subscribers = new Map();\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 5;\n    this.reconnectDelay = 3000; // 3 seconds\n  }\n  connect() {\n    try {\n      this.ws = new WebSocket('wss://pumpportal.fun/api/data');\n      this.ws.onopen = () => {\n        console.log('Connected to PumpPortal WebSocket');\n        this.reconnectAttempts = 0;\n      };\n      this.ws.onmessage = event => {\n        try {\n          const data = JSON.parse(event.data);\n          // Notify all subscribers with the new data\n          this.subscribers.forEach(callback => callback(data));\n        } catch (error) {\n          console.error('Error parsing WebSocket message:', error);\n        }\n      };\n      this.ws.onclose = () => {\n        console.log('WebSocket connection closed');\n        this.handleReconnect();\n      };\n      this.ws.onerror = error => {\n        console.error('WebSocket error:', error);\n      };\n    } catch (error) {\n      console.error('Error creating WebSocket connection:', error);\n      this.handleReconnect();\n    }\n  }\n  handleReconnect() {\n    if (this.reconnectAttempts < this.maxReconnectAttempts) {\n      this.reconnectAttempts++;\n      console.log(`Attempting to reconnect (${this.reconnectAttempts}/${this.maxReconnectAttempts})...`);\n      setTimeout(() => this.connect(), this.reconnectDelay);\n    } else {\n      console.error('Max reconnection attempts reached');\n    }\n  }\n  subscribe(id, callback) {\n    this.subscribers.set(id, callback);\n\n    // If this is the first subscriber, establish the connection\n    if (this.subscribers.size === 1) {\n      this.connect();\n    }\n  }\n  unsubscribe(id) {\n    this.subscribers.delete(id);\n\n    // If there are no more subscribers, close the connection\n    if (this.subscribers.size === 0 && this.ws) {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n}\n\n// Create a singleton instance\nconst websocketService = new WebSocketService();\nexport default websocketService;","map":{"version":3,"names":["WebSocketService","constructor","ws","subscribers","Map","reconnectAttempts","maxReconnectAttempts","reconnectDelay","connect","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","forEach","callback","error","onclose","handleReconnect","onerror","setTimeout","subscribe","id","set","size","unsubscribe","delete","close","websocketService"],"sources":["/Users/papa/Desktop/trenchboard/trenchboard.io/src/utils/websocket.js"],"sourcesContent":["class WebSocketService {\n  constructor() {\n    this.ws = null;\n    this.subscribers = new Map();\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 5;\n    this.reconnectDelay = 3000; // 3 seconds\n  }\n\n  connect() {\n    try {\n      this.ws = new WebSocket('wss://pumpportal.fun/api/data');\n\n      this.ws.onopen = () => {\n        console.log('Connected to PumpPortal WebSocket');\n        this.reconnectAttempts = 0;\n      };\n\n      this.ws.onmessage = (event) => {\n        try {\n          const data = JSON.parse(event.data);\n          // Notify all subscribers with the new data\n          this.subscribers.forEach((callback) => callback(data));\n        } catch (error) {\n          console.error('Error parsing WebSocket message:', error);\n        }\n      };\n\n      this.ws.onclose = () => {\n        console.log('WebSocket connection closed');\n        this.handleReconnect();\n      };\n\n      this.ws.onerror = (error) => {\n        console.error('WebSocket error:', error);\n      };\n    } catch (error) {\n      console.error('Error creating WebSocket connection:', error);\n      this.handleReconnect();\n    }\n  }\n\n  handleReconnect() {\n    if (this.reconnectAttempts < this.maxReconnectAttempts) {\n      this.reconnectAttempts++;\n      console.log(`Attempting to reconnect (${this.reconnectAttempts}/${this.maxReconnectAttempts})...`);\n      setTimeout(() => this.connect(), this.reconnectDelay);\n    } else {\n      console.error('Max reconnection attempts reached');\n    }\n  }\n\n  subscribe(id, callback) {\n    this.subscribers.set(id, callback);\n    \n    // If this is the first subscriber, establish the connection\n    if (this.subscribers.size === 1) {\n      this.connect();\n    }\n  }\n\n  unsubscribe(id) {\n    this.subscribers.delete(id);\n    \n    // If there are no more subscribers, close the connection\n    if (this.subscribers.size === 0 && this.ws) {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n}\n\n// Create a singleton instance\nconst websocketService = new WebSocketService();\nexport default websocketService;"],"mappings":"AAAA,MAAMA,gBAAgB,CAAC;EACrBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,EAAE,GAAG,IAAI;IACd,IAAI,CAACC,WAAW,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC5B,IAAI,CAACC,iBAAiB,GAAG,CAAC;IAC1B,IAAI,CAACC,oBAAoB,GAAG,CAAC;IAC7B,IAAI,CAACC,cAAc,GAAG,IAAI,CAAC,CAAC;EAC9B;EAEAC,OAAOA,CAAA,EAAG;IACR,IAAI;MACF,IAAI,CAACN,EAAE,GAAG,IAAIO,SAAS,CAAC,+BAA+B,CAAC;MAExD,IAAI,CAACP,EAAE,CAACQ,MAAM,GAAG,MAAM;QACrBC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;QAChD,IAAI,CAACP,iBAAiB,GAAG,CAAC;MAC5B,CAAC;MAED,IAAI,CAACH,EAAE,CAACW,SAAS,GAAIC,KAAK,IAAK;QAC7B,IAAI;UACF,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;UACnC;UACA,IAAI,CAACZ,WAAW,CAACe,OAAO,CAAEC,QAAQ,IAAKA,QAAQ,CAACJ,IAAI,CAAC,CAAC;QACxD,CAAC,CAAC,OAAOK,KAAK,EAAE;UACdT,OAAO,CAACS,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QAC1D;MACF,CAAC;MAED,IAAI,CAAClB,EAAE,CAACmB,OAAO,GAAG,MAAM;QACtBV,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;QAC1C,IAAI,CAACU,eAAe,CAAC,CAAC;MACxB,CAAC;MAED,IAAI,CAACpB,EAAE,CAACqB,OAAO,GAAIH,KAAK,IAAK;QAC3BT,OAAO,CAACS,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MAC1C,CAAC;IACH,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5D,IAAI,CAACE,eAAe,CAAC,CAAC;IACxB;EACF;EAEAA,eAAeA,CAAA,EAAG;IAChB,IAAI,IAAI,CAACjB,iBAAiB,GAAG,IAAI,CAACC,oBAAoB,EAAE;MACtD,IAAI,CAACD,iBAAiB,EAAE;MACxBM,OAAO,CAACC,GAAG,CAAC,4BAA4B,IAAI,CAACP,iBAAiB,IAAI,IAAI,CAACC,oBAAoB,MAAM,CAAC;MAClGkB,UAAU,CAAC,MAAM,IAAI,CAAChB,OAAO,CAAC,CAAC,EAAE,IAAI,CAACD,cAAc,CAAC;IACvD,CAAC,MAAM;MACLI,OAAO,CAACS,KAAK,CAAC,mCAAmC,CAAC;IACpD;EACF;EAEAK,SAASA,CAACC,EAAE,EAAEP,QAAQ,EAAE;IACtB,IAAI,CAAChB,WAAW,CAACwB,GAAG,CAACD,EAAE,EAAEP,QAAQ,CAAC;;IAElC;IACA,IAAI,IAAI,CAAChB,WAAW,CAACyB,IAAI,KAAK,CAAC,EAAE;MAC/B,IAAI,CAACpB,OAAO,CAAC,CAAC;IAChB;EACF;EAEAqB,WAAWA,CAACH,EAAE,EAAE;IACd,IAAI,CAACvB,WAAW,CAAC2B,MAAM,CAACJ,EAAE,CAAC;;IAE3B;IACA,IAAI,IAAI,CAACvB,WAAW,CAACyB,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC1B,EAAE,EAAE;MAC1C,IAAI,CAACA,EAAE,CAAC6B,KAAK,CAAC,CAAC;MACf,IAAI,CAAC7B,EAAE,GAAG,IAAI;IAChB;EACF;AACF;;AAEA;AACA,MAAM8B,gBAAgB,GAAG,IAAIhC,gBAAgB,CAAC,CAAC;AAC/C,eAAegC,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}