{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseConnectSettings = exports.getEnv = void 0;\nconst connectSettings_1 = require(\"@trezor/connect/lib/data/connectSettings\");\nconst getEnv = () => {\n  var _a;\n  if (typeof chrome !== 'undefined' && typeof ((_a = chrome.runtime) === null || _a === void 0 ? void 0 : _a.onConnect) !== 'undefined') {\n    return 'webextension';\n  }\n  if (typeof navigator !== 'undefined') {\n    if (typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative') {\n      return 'react-native';\n    }\n    const userAgent = navigator.userAgent.toLowerCase();\n    if (userAgent.indexOf(' electron/') > -1) {\n      return 'electron';\n    }\n  }\n  return 'web';\n};\nexports.getEnv = getEnv;\nconst processQueryString = (url, keys) => {\n  const searchParams = new URLSearchParams(url);\n  const result = {};\n  const paramArray = Array.from(searchParams.entries());\n  paramArray.forEach(([key, value]) => {\n    if (keys.includes(key)) {\n      result[key] = decodeURIComponent(value);\n    }\n  });\n  return result;\n};\nconst parseConnectSettings = (input = {}) => {\n  var _a;\n  const settings = Object.assign({\n    popup: true\n  }, input);\n  let globalSrc;\n  if (typeof window !== 'undefined') {\n    globalSrc = window.__TREZOR_CONNECT_SRC;\n  } else if (typeof global !== 'undefined') {\n    globalSrc = global.__TREZOR_CONNECT_SRC;\n  }\n  if (typeof globalSrc === 'string') {\n    settings.connectSrc = globalSrc;\n    settings.debug = true;\n  }\n  if (typeof window !== 'undefined' && typeof ((_a = window.location) === null || _a === void 0 ? void 0 : _a.search) === 'string') {\n    const query = processQueryString(window.location.search, ['trezor-connect-src']);\n    if (query['trezor-connect-src']) {\n      settings.debug = true;\n      settings.connectSrc = query['trezor-connect-src'];\n    }\n  }\n  if (typeof input.env !== 'string') {\n    settings.env = (0, exports.getEnv)();\n  }\n  return (0, connectSettings_1.parseConnectSettings)(settings);\n};\nexports.parseConnectSettings = parseConnectSettings;","map":{"version":3,"names":["Object","defineProperty","exports","value","parseConnectSettings","getEnv","connectSettings_1","require","_a","chrome","runtime","onConnect","navigator","product","toLowerCase","userAgent","indexOf","processQueryString","url","keys","searchParams","URLSearchParams","result","paramArray","Array","from","entries","forEach","key","includes","decodeURIComponent","input","settings","assign","popup","globalSrc","window","__TREZOR_CONNECT_SRC","global","connectSrc","debug","location","search","query","env"],"sources":["/Users/papa/Desktop/trenchboard/trenchboard.io/node_modules/@trezor/connect-web/lib/connectSettings.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseConnectSettings = exports.getEnv = void 0;\nconst connectSettings_1 = require(\"@trezor/connect/lib/data/connectSettings\");\nconst getEnv = () => {\n    var _a;\n    if (typeof chrome !== 'undefined' && typeof ((_a = chrome.runtime) === null || _a === void 0 ? void 0 : _a.onConnect) !== 'undefined') {\n        return 'webextension';\n    }\n    if (typeof navigator !== 'undefined') {\n        if (typeof navigator.product === 'string' &&\n            navigator.product.toLowerCase() === 'reactnative') {\n            return 'react-native';\n        }\n        const userAgent = navigator.userAgent.toLowerCase();\n        if (userAgent.indexOf(' electron/') > -1) {\n            return 'electron';\n        }\n    }\n    return 'web';\n};\nexports.getEnv = getEnv;\nconst processQueryString = (url, keys) => {\n    const searchParams = new URLSearchParams(url);\n    const result = {};\n    const paramArray = Array.from(searchParams.entries());\n    paramArray.forEach(([key, value]) => {\n        if (keys.includes(key)) {\n            result[key] = decodeURIComponent(value);\n        }\n    });\n    return result;\n};\nconst parseConnectSettings = (input = {}) => {\n    var _a;\n    const settings = Object.assign({ popup: true }, input);\n    let globalSrc;\n    if (typeof window !== 'undefined') {\n        globalSrc = window.__TREZOR_CONNECT_SRC;\n    }\n    else if (typeof global !== 'undefined') {\n        globalSrc = global.__TREZOR_CONNECT_SRC;\n    }\n    if (typeof globalSrc === 'string') {\n        settings.connectSrc = globalSrc;\n        settings.debug = true;\n    }\n    if (typeof window !== 'undefined' && typeof ((_a = window.location) === null || _a === void 0 ? void 0 : _a.search) === 'string') {\n        const query = processQueryString(window.location.search, ['trezor-connect-src']);\n        if (query['trezor-connect-src']) {\n            settings.debug = true;\n            settings.connectSrc = query['trezor-connect-src'];\n        }\n    }\n    if (typeof input.env !== 'string') {\n        settings.env = (0, exports.getEnv)();\n    }\n    return (0, connectSettings_1.parseConnectSettings)(settings);\n};\nexports.parseConnectSettings = parseConnectSettings;\n//# sourceMappingURL=connectSettings.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,oBAAoB,GAAGF,OAAO,CAACG,MAAM,GAAG,KAAK,CAAC;AACtD,MAAMC,iBAAiB,GAAGC,OAAO,CAAC,0CAA0C,CAAC;AAC7E,MAAMF,MAAM,GAAGA,CAAA,KAAM;EACjB,IAAIG,EAAE;EACN,IAAI,OAAOC,MAAM,KAAK,WAAW,IAAI,QAAQ,CAACD,EAAE,GAAGC,MAAM,CAACC,OAAO,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACG,SAAS,CAAC,KAAK,WAAW,EAAE;IACnI,OAAO,cAAc;EACzB;EACA,IAAI,OAAOC,SAAS,KAAK,WAAW,EAAE;IAClC,IAAI,OAAOA,SAAS,CAACC,OAAO,KAAK,QAAQ,IACrCD,SAAS,CAACC,OAAO,CAACC,WAAW,CAAC,CAAC,KAAK,aAAa,EAAE;MACnD,OAAO,cAAc;IACzB;IACA,MAAMC,SAAS,GAAGH,SAAS,CAACG,SAAS,CAACD,WAAW,CAAC,CAAC;IACnD,IAAIC,SAAS,CAACC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE;MACtC,OAAO,UAAU;IACrB;EACJ;EACA,OAAO,KAAK;AAChB,CAAC;AACDd,OAAO,CAACG,MAAM,GAAGA,MAAM;AACvB,MAAMY,kBAAkB,GAAGA,CAACC,GAAG,EAAEC,IAAI,KAAK;EACtC,MAAMC,YAAY,GAAG,IAAIC,eAAe,CAACH,GAAG,CAAC;EAC7C,MAAMI,MAAM,GAAG,CAAC,CAAC;EACjB,MAAMC,UAAU,GAAGC,KAAK,CAACC,IAAI,CAACL,YAAY,CAACM,OAAO,CAAC,CAAC,CAAC;EACrDH,UAAU,CAACI,OAAO,CAAC,CAAC,CAACC,GAAG,EAAEzB,KAAK,CAAC,KAAK;IACjC,IAAIgB,IAAI,CAACU,QAAQ,CAACD,GAAG,CAAC,EAAE;MACpBN,MAAM,CAACM,GAAG,CAAC,GAAGE,kBAAkB,CAAC3B,KAAK,CAAC;IAC3C;EACJ,CAAC,CAAC;EACF,OAAOmB,MAAM;AACjB,CAAC;AACD,MAAMlB,oBAAoB,GAAGA,CAAC2B,KAAK,GAAG,CAAC,CAAC,KAAK;EACzC,IAAIvB,EAAE;EACN,MAAMwB,QAAQ,GAAGhC,MAAM,CAACiC,MAAM,CAAC;IAAEC,KAAK,EAAE;EAAK,CAAC,EAAEH,KAAK,CAAC;EACtD,IAAII,SAAS;EACb,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IAC/BD,SAAS,GAAGC,MAAM,CAACC,oBAAoB;EAC3C,CAAC,MACI,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IACpCH,SAAS,GAAGG,MAAM,CAACD,oBAAoB;EAC3C;EACA,IAAI,OAAOF,SAAS,KAAK,QAAQ,EAAE;IAC/BH,QAAQ,CAACO,UAAU,GAAGJ,SAAS;IAC/BH,QAAQ,CAACQ,KAAK,GAAG,IAAI;EACzB;EACA,IAAI,OAAOJ,MAAM,KAAK,WAAW,IAAI,QAAQ,CAAC5B,EAAE,GAAG4B,MAAM,CAACK,QAAQ,MAAM,IAAI,IAAIjC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACkC,MAAM,CAAC,KAAK,QAAQ,EAAE;IAC9H,MAAMC,KAAK,GAAG1B,kBAAkB,CAACmB,MAAM,CAACK,QAAQ,CAACC,MAAM,EAAE,CAAC,oBAAoB,CAAC,CAAC;IAChF,IAAIC,KAAK,CAAC,oBAAoB,CAAC,EAAE;MAC7BX,QAAQ,CAACQ,KAAK,GAAG,IAAI;MACrBR,QAAQ,CAACO,UAAU,GAAGI,KAAK,CAAC,oBAAoB,CAAC;IACrD;EACJ;EACA,IAAI,OAAOZ,KAAK,CAACa,GAAG,KAAK,QAAQ,EAAE;IAC/BZ,QAAQ,CAACY,GAAG,GAAG,CAAC,CAAC,EAAE1C,OAAO,CAACG,MAAM,EAAE,CAAC;EACxC;EACA,OAAO,CAAC,CAAC,EAAEC,iBAAiB,CAACF,oBAAoB,EAAE4B,QAAQ,CAAC;AAChE,CAAC;AACD9B,OAAO,CAACE,oBAAoB,GAAGA,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}