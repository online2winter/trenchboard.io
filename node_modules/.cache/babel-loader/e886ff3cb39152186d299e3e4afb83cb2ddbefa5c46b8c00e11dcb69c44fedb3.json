{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ServiceWorkerWindowChannel = void 0;\nconst connect_common_1 = require(\"@trezor/connect-common\");\nclass ServiceWorkerWindowChannel extends connect_common_1.AbstractMessageChannel {\n  constructor({\n    name,\n    channel,\n    logger,\n    lazyHandshake,\n    legacyMode,\n    allowSelfOrigin = false,\n    currentId\n  }) {\n    super({\n      channel,\n      sendFn: message => {\n        if (!this.port) throw new Error('port not assigned');\n        this.port.postMessage(message);\n      },\n      logger,\n      lazyHandshake,\n      legacyMode\n    });\n    this.name = name;\n    this.allowSelfOrigin = allowSelfOrigin;\n    this.currentId = currentId;\n    this.connect();\n  }\n  connect() {\n    chrome.runtime.onConnect.addListener(port => {\n      var _a, _b, _c, _d;\n      if (port.name !== this.name) return;\n      if (((_a = this.currentId) === null || _a === void 0 ? void 0 : _a.call(this)) && ((_b = this.currentId) === null || _b === void 0 ? void 0 : _b.call(this)) !== ((_d = (_c = port.sender) === null || _c === void 0 ? void 0 : _c.tab) === null || _d === void 0 ? void 0 : _d.id)) return;\n      this.port = port;\n      this.port.onMessage.addListener((message, {\n        sender\n      }) => {\n        var _a, _b, _c, _d, _e;\n        if (!sender) {\n          (_a = this.logger) === null || _a === void 0 ? void 0 : _a.error('service-worker-window', 'no sender');\n          return;\n        }\n        const {\n          origin\n        } = sender;\n        const whitelist = ['https://connect.trezor.io', 'https://staging-connect.trezor.io', 'https://suite.corp.sldev.cz', 'https://dev.suite.sldev.cz', 'http://localhost:8088'];\n        const webextensionId = (_b = chrome === null || chrome === void 0 ? void 0 : chrome.runtime) === null || _b === void 0 ? void 0 : _b.id;\n        if (webextensionId) {\n          whitelist.push(`chrome-extension://${webextensionId}`);\n        }\n        const webextensionUrl = (_c = chrome === null || chrome === void 0 ? void 0 : chrome.runtime) === null || _c === void 0 ? void 0 : _c.getURL('');\n        if (webextensionUrl) {\n          whitelist.push(webextensionUrl.slice(0, -1));\n        }\n        if (!origin) {\n          (_d = this.logger) === null || _d === void 0 ? void 0 : _d.error('connect-webextension/messageChannel/extensionPort/onMessage', 'no origin');\n          return;\n        }\n        if (!whitelist.includes(origin)) {\n          (_e = this.logger) === null || _e === void 0 ? void 0 : _e.error('connect-webextension/messageChannel/extensionPort/onMessage', 'origin not whitelisted', origin);\n          return;\n        }\n        if (origin === self.origin && !this.allowSelfOrigin) {\n          return;\n        }\n        this.onMessage(message);\n      });\n    });\n    this.isConnected = true;\n  }\n  disconnect() {\n    var _a;\n    if (!this.isConnected) return;\n    (_a = this.port) === null || _a === void 0 ? void 0 : _a.disconnect();\n    this.clear();\n    this.isConnected = false;\n  }\n}\nexports.ServiceWorkerWindowChannel = ServiceWorkerWindowChannel;","map":{"version":3,"names":["Object","defineProperty","exports","value","ServiceWorkerWindowChannel","connect_common_1","require","AbstractMessageChannel","constructor","name","channel","logger","lazyHandshake","legacyMode","allowSelfOrigin","currentId","sendFn","message","port","Error","postMessage","connect","chrome","runtime","onConnect","addListener","_a","_b","_c","_d","call","sender","tab","id","onMessage","_e","error","origin","whitelist","webextensionId","push","webextensionUrl","getURL","slice","includes","self","isConnected","disconnect","clear"],"sources":["/Users/papa/Desktop/trenchboard/trenchboard.io/node_modules/@trezor/connect-web/lib/channels/serviceworker-window.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServiceWorkerWindowChannel = void 0;\nconst connect_common_1 = require(\"@trezor/connect-common\");\nclass ServiceWorkerWindowChannel extends connect_common_1.AbstractMessageChannel {\n    constructor({ name, channel, logger, lazyHandshake, legacyMode, allowSelfOrigin = false, currentId, }) {\n        super({\n            channel,\n            sendFn: (message) => {\n                if (!this.port)\n                    throw new Error('port not assigned');\n                this.port.postMessage(message);\n            },\n            logger,\n            lazyHandshake,\n            legacyMode,\n        });\n        this.name = name;\n        this.allowSelfOrigin = allowSelfOrigin;\n        this.currentId = currentId;\n        this.connect();\n    }\n    connect() {\n        chrome.runtime.onConnect.addListener(port => {\n            var _a, _b, _c, _d;\n            if (port.name !== this.name)\n                return;\n            if (((_a = this.currentId) === null || _a === void 0 ? void 0 : _a.call(this)) && ((_b = this.currentId) === null || _b === void 0 ? void 0 : _b.call(this)) !== ((_d = (_c = port.sender) === null || _c === void 0 ? void 0 : _c.tab) === null || _d === void 0 ? void 0 : _d.id))\n                return;\n            this.port = port;\n            this.port.onMessage.addListener((message, { sender }) => {\n                var _a, _b, _c, _d, _e;\n                if (!sender) {\n                    (_a = this.logger) === null || _a === void 0 ? void 0 : _a.error('service-worker-window', 'no sender');\n                    return;\n                }\n                const { origin } = sender;\n                const whitelist = [\n                    'https://connect.trezor.io',\n                    'https://staging-connect.trezor.io',\n                    'https://suite.corp.sldev.cz',\n                    'https://dev.suite.sldev.cz',\n                    'http://localhost:8088',\n                ];\n                const webextensionId = (_b = chrome === null || chrome === void 0 ? void 0 : chrome.runtime) === null || _b === void 0 ? void 0 : _b.id;\n                if (webextensionId) {\n                    whitelist.push(`chrome-extension://${webextensionId}`);\n                }\n                const webextensionUrl = (_c = chrome === null || chrome === void 0 ? void 0 : chrome.runtime) === null || _c === void 0 ? void 0 : _c.getURL('');\n                if (webextensionUrl) {\n                    whitelist.push(webextensionUrl.slice(0, -1));\n                }\n                if (!origin) {\n                    (_d = this.logger) === null || _d === void 0 ? void 0 : _d.error('connect-webextension/messageChannel/extensionPort/onMessage', 'no origin');\n                    return;\n                }\n                if (!whitelist.includes(origin)) {\n                    (_e = this.logger) === null || _e === void 0 ? void 0 : _e.error('connect-webextension/messageChannel/extensionPort/onMessage', 'origin not whitelisted', origin);\n                    return;\n                }\n                if (origin === self.origin && !this.allowSelfOrigin) {\n                    return;\n                }\n                this.onMessage(message);\n            });\n        });\n        this.isConnected = true;\n    }\n    disconnect() {\n        var _a;\n        if (!this.isConnected)\n            return;\n        (_a = this.port) === null || _a === void 0 ? void 0 : _a.disconnect();\n        this.clear();\n        this.isConnected = false;\n    }\n}\nexports.ServiceWorkerWindowChannel = ServiceWorkerWindowChannel;\n//# sourceMappingURL=serviceworker-window.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}