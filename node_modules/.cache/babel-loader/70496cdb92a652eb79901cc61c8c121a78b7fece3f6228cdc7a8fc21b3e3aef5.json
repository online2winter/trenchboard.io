{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SolanaSignedTransaction = exports.SolanaSignTransaction = exports.SolanaTxAdditionalInfo = exports.SolanaTxTokenAccountInfo = exports.SolanaPublicKey = void 0;\nconst schema_utils_1 = require(\"@trezor/schema-utils\");\nconst params_1 = require(\"../../params\");\nexports.SolanaPublicKey = schema_utils_1.Type.Intersect([params_1.PublicKey, schema_utils_1.Type.Object({\n  publicKey: schema_utils_1.Type.String()\n})]);\nexports.SolanaTxTokenAccountInfo = schema_utils_1.Type.Object({\n  baseAddress: schema_utils_1.Type.String(),\n  tokenProgram: schema_utils_1.Type.String(),\n  tokenMint: schema_utils_1.Type.String(),\n  tokenAccount: schema_utils_1.Type.String()\n});\nexports.SolanaTxAdditionalInfo = schema_utils_1.Type.Object({\n  tokenAccountsInfos: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.SolanaTxTokenAccountInfo, {\n    minItems: 1\n  }))\n});\nexports.SolanaSignTransaction = schema_utils_1.Type.Object({\n  path: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Array(schema_utils_1.Type.Number())]),\n  serializedTx: schema_utils_1.Type.String(),\n  additionalInfo: schema_utils_1.Type.Optional(exports.SolanaTxAdditionalInfo)\n});\nexports.SolanaSignedTransaction = schema_utils_1.Type.Object({\n  signature: schema_utils_1.Type.String()\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","SolanaSignedTransaction","SolanaSignTransaction","SolanaTxAdditionalInfo","SolanaTxTokenAccountInfo","SolanaPublicKey","schema_utils_1","require","params_1","Type","Intersect","PublicKey","publicKey","String","baseAddress","tokenProgram","tokenMint","tokenAccount","tokenAccountsInfos","Optional","Array","minItems","path","Union","Number","serializedTx","additionalInfo","signature"],"sources":["/Users/papa/Desktop/trenchboard/trenchboard.io/node_modules/@trezor/connect/lib/types/api/solana/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SolanaSignedTransaction = exports.SolanaSignTransaction = exports.SolanaTxAdditionalInfo = exports.SolanaTxTokenAccountInfo = exports.SolanaPublicKey = void 0;\nconst schema_utils_1 = require(\"@trezor/schema-utils\");\nconst params_1 = require(\"../../params\");\nexports.SolanaPublicKey = schema_utils_1.Type.Intersect([\n    params_1.PublicKey,\n    schema_utils_1.Type.Object({\n        publicKey: schema_utils_1.Type.String(),\n    }),\n]);\nexports.SolanaTxTokenAccountInfo = schema_utils_1.Type.Object({\n    baseAddress: schema_utils_1.Type.String(),\n    tokenProgram: schema_utils_1.Type.String(),\n    tokenMint: schema_utils_1.Type.String(),\n    tokenAccount: schema_utils_1.Type.String(),\n});\nexports.SolanaTxAdditionalInfo = schema_utils_1.Type.Object({\n    tokenAccountsInfos: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.SolanaTxTokenAccountInfo, { minItems: 1 })),\n});\nexports.SolanaSignTransaction = schema_utils_1.Type.Object({\n    path: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Array(schema_utils_1.Type.Number())]),\n    serializedTx: schema_utils_1.Type.String(),\n    additionalInfo: schema_utils_1.Type.Optional(exports.SolanaTxAdditionalInfo),\n});\nexports.SolanaSignedTransaction = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n});\n//# sourceMappingURL=index.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,uBAAuB,GAAGF,OAAO,CAACG,qBAAqB,GAAGH,OAAO,CAACI,sBAAsB,GAAGJ,OAAO,CAACK,wBAAwB,GAAGL,OAAO,CAACM,eAAe,GAAG,KAAK,CAAC;AACtK,MAAMC,cAAc,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AACtD,MAAMC,QAAQ,GAAGD,OAAO,CAAC,cAAc,CAAC;AACxCR,OAAO,CAACM,eAAe,GAAGC,cAAc,CAACG,IAAI,CAACC,SAAS,CAAC,CACpDF,QAAQ,CAACG,SAAS,EAClBL,cAAc,CAACG,IAAI,CAACZ,MAAM,CAAC;EACvBe,SAAS,EAAEN,cAAc,CAACG,IAAI,CAACI,MAAM,CAAC;AAC1C,CAAC,CAAC,CACL,CAAC;AACFd,OAAO,CAACK,wBAAwB,GAAGE,cAAc,CAACG,IAAI,CAACZ,MAAM,CAAC;EAC1DiB,WAAW,EAAER,cAAc,CAACG,IAAI,CAACI,MAAM,CAAC,CAAC;EACzCE,YAAY,EAAET,cAAc,CAACG,IAAI,CAACI,MAAM,CAAC,CAAC;EAC1CG,SAAS,EAAEV,cAAc,CAACG,IAAI,CAACI,MAAM,CAAC,CAAC;EACvCI,YAAY,EAAEX,cAAc,CAACG,IAAI,CAACI,MAAM,CAAC;AAC7C,CAAC,CAAC;AACFd,OAAO,CAACI,sBAAsB,GAAGG,cAAc,CAACG,IAAI,CAACZ,MAAM,CAAC;EACxDqB,kBAAkB,EAAEZ,cAAc,CAACG,IAAI,CAACU,QAAQ,CAACb,cAAc,CAACG,IAAI,CAACW,KAAK,CAACrB,OAAO,CAACK,wBAAwB,EAAE;IAAEiB,QAAQ,EAAE;EAAE,CAAC,CAAC;AACjI,CAAC,CAAC;AACFtB,OAAO,CAACG,qBAAqB,GAAGI,cAAc,CAACG,IAAI,CAACZ,MAAM,CAAC;EACvDyB,IAAI,EAAEhB,cAAc,CAACG,IAAI,CAACc,KAAK,CAAC,CAACjB,cAAc,CAACG,IAAI,CAACI,MAAM,CAAC,CAAC,EAAEP,cAAc,CAACG,IAAI,CAACW,KAAK,CAACd,cAAc,CAACG,IAAI,CAACe,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EACxHC,YAAY,EAAEnB,cAAc,CAACG,IAAI,CAACI,MAAM,CAAC,CAAC;EAC1Ca,cAAc,EAAEpB,cAAc,CAACG,IAAI,CAACU,QAAQ,CAACpB,OAAO,CAACI,sBAAsB;AAC/E,CAAC,CAAC;AACFJ,OAAO,CAACE,uBAAuB,GAAGK,cAAc,CAACG,IAAI,CAACZ,MAAM,CAAC;EACzD8B,SAAS,EAAErB,cAAc,CAACG,IAAI,CAACI,MAAM,CAAC;AAC1C,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}