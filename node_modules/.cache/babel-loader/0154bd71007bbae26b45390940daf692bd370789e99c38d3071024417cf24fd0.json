{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LogsManager = void 0;\nconst logs_1 = require(\"./logs\");\nclass LogsManager {\n  constructor({\n    colors\n  }) {\n    this.logs = {};\n    this.colors = {};\n    this.colors = colors;\n  }\n  initLog(prefix, enabled, logWriter) {\n    const instanceWriter = logWriter || this.writer;\n    const instance = new logs_1.Log(prefix, !!enabled, instanceWriter);\n    if (this.colors) {\n      instance.setColors(this.colors);\n    }\n    this.logs[prefix] = instance;\n    return instance;\n  }\n  setLogWriter(logWriterFactory) {\n    Object.keys(this.logs).forEach(key => {\n      this.writer = logWriterFactory();\n      if (this.writer) {\n        this.logs[key].setWriter(this.writer);\n        const {\n          messages\n        } = this.logs[key];\n        messages.forEach(message => {\n          var _a;\n          (_a = this.writer) === null || _a === void 0 ? void 0 : _a.add(message);\n        });\n      }\n    });\n  }\n  enableLog(enabled) {\n    Object.keys(this.logs).forEach(key => {\n      this.logs[key].enabled = !!enabled;\n    });\n  }\n  enableLogByPrefix(prefix, enabled) {\n    if (this.logs[prefix]) {\n      this.logs[prefix].enabled = enabled;\n    }\n  }\n  getLog() {\n    let logs = [];\n    Object.keys(this.logs).forEach(key => {\n      logs = logs.concat(this.logs[key].messages);\n    });\n    logs.sort((a, b) => a.timestamp - b.timestamp);\n    return logs;\n  }\n}\nexports.LogsManager = LogsManager;","map":{"version":3,"names":["Object","defineProperty","exports","value","LogsManager","logs_1","require","constructor","colors","logs","initLog","prefix","enabled","logWriter","instanceWriter","writer","instance","Log","setColors","setLogWriter","logWriterFactory","keys","forEach","key","setWriter","messages","message","_a","add","enableLog","enableLogByPrefix","getLog","concat","sort","a","b","timestamp"],"sources":["/Users/papa/Desktop/trenchboard/trenchboard.io/node_modules/@trezor/utils/lib/logsManager.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogsManager = void 0;\nconst logs_1 = require(\"./logs\");\nclass LogsManager {\n    constructor({ colors }) {\n        this.logs = {};\n        this.colors = {};\n        this.colors = colors;\n    }\n    initLog(prefix, enabled, logWriter) {\n        const instanceWriter = logWriter || this.writer;\n        const instance = new logs_1.Log(prefix, !!enabled, instanceWriter);\n        if (this.colors) {\n            instance.setColors(this.colors);\n        }\n        this.logs[prefix] = instance;\n        return instance;\n    }\n    setLogWriter(logWriterFactory) {\n        Object.keys(this.logs).forEach(key => {\n            this.writer = logWriterFactory();\n            if (this.writer) {\n                this.logs[key].setWriter(this.writer);\n                const { messages } = this.logs[key];\n                messages.forEach(message => {\n                    var _a;\n                    (_a = this.writer) === null || _a === void 0 ? void 0 : _a.add(message);\n                });\n            }\n        });\n    }\n    enableLog(enabled) {\n        Object.keys(this.logs).forEach(key => {\n            this.logs[key].enabled = !!enabled;\n        });\n    }\n    enableLogByPrefix(prefix, enabled) {\n        if (this.logs[prefix]) {\n            this.logs[prefix].enabled = enabled;\n        }\n    }\n    getLog() {\n        let logs = [];\n        Object.keys(this.logs).forEach(key => {\n            logs = logs.concat(this.logs[key].messages);\n        });\n        logs.sort((a, b) => a.timestamp - b.timestamp);\n        return logs;\n    }\n}\nexports.LogsManager = LogsManager;\n//# sourceMappingURL=logsManager.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,WAAW,GAAG,KAAK,CAAC;AAC5B,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMF,WAAW,CAAC;EACdG,WAAWA,CAAC;IAAEC;EAAO,CAAC,EAAE;IACpB,IAAI,CAACC,IAAI,GAAG,CAAC,CAAC;IACd,IAAI,CAACD,MAAM,GAAG,CAAC,CAAC;IAChB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB;EACAE,OAAOA,CAACC,MAAM,EAAEC,OAAO,EAAEC,SAAS,EAAE;IAChC,MAAMC,cAAc,GAAGD,SAAS,IAAI,IAAI,CAACE,MAAM;IAC/C,MAAMC,QAAQ,GAAG,IAAIX,MAAM,CAACY,GAAG,CAACN,MAAM,EAAE,CAAC,CAACC,OAAO,EAAEE,cAAc,CAAC;IAClE,IAAI,IAAI,CAACN,MAAM,EAAE;MACbQ,QAAQ,CAACE,SAAS,CAAC,IAAI,CAACV,MAAM,CAAC;IACnC;IACA,IAAI,CAACC,IAAI,CAACE,MAAM,CAAC,GAAGK,QAAQ;IAC5B,OAAOA,QAAQ;EACnB;EACAG,YAAYA,CAACC,gBAAgB,EAAE;IAC3BpB,MAAM,CAACqB,IAAI,CAAC,IAAI,CAACZ,IAAI,CAAC,CAACa,OAAO,CAACC,GAAG,IAAI;MAClC,IAAI,CAACR,MAAM,GAAGK,gBAAgB,CAAC,CAAC;MAChC,IAAI,IAAI,CAACL,MAAM,EAAE;QACb,IAAI,CAACN,IAAI,CAACc,GAAG,CAAC,CAACC,SAAS,CAAC,IAAI,CAACT,MAAM,CAAC;QACrC,MAAM;UAAEU;QAAS,CAAC,GAAG,IAAI,CAAChB,IAAI,CAACc,GAAG,CAAC;QACnCE,QAAQ,CAACH,OAAO,CAACI,OAAO,IAAI;UACxB,IAAIC,EAAE;UACN,CAACA,EAAE,GAAG,IAAI,CAACZ,MAAM,MAAM,IAAI,IAAIY,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,GAAG,CAACF,OAAO,CAAC;QAC3E,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN;EACAG,SAASA,CAACjB,OAAO,EAAE;IACfZ,MAAM,CAACqB,IAAI,CAAC,IAAI,CAACZ,IAAI,CAAC,CAACa,OAAO,CAACC,GAAG,IAAI;MAClC,IAAI,CAACd,IAAI,CAACc,GAAG,CAAC,CAACX,OAAO,GAAG,CAAC,CAACA,OAAO;IACtC,CAAC,CAAC;EACN;EACAkB,iBAAiBA,CAACnB,MAAM,EAAEC,OAAO,EAAE;IAC/B,IAAI,IAAI,CAACH,IAAI,CAACE,MAAM,CAAC,EAAE;MACnB,IAAI,CAACF,IAAI,CAACE,MAAM,CAAC,CAACC,OAAO,GAAGA,OAAO;IACvC;EACJ;EACAmB,MAAMA,CAAA,EAAG;IACL,IAAItB,IAAI,GAAG,EAAE;IACbT,MAAM,CAACqB,IAAI,CAAC,IAAI,CAACZ,IAAI,CAAC,CAACa,OAAO,CAACC,GAAG,IAAI;MAClCd,IAAI,GAAGA,IAAI,CAACuB,MAAM,CAAC,IAAI,CAACvB,IAAI,CAACc,GAAG,CAAC,CAACE,QAAQ,CAAC;IAC/C,CAAC,CAAC;IACFhB,IAAI,CAACwB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,SAAS,GAAGD,CAAC,CAACC,SAAS,CAAC;IAC9C,OAAO3B,IAAI;EACf;AACJ;AACAP,OAAO,CAACE,WAAW,GAAGA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}